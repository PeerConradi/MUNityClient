@inject MUNityClient.Services.UserService userService;


<EditForm Model="@this.Request" OnSubmit="@Register" class="text-center border border-light p-5">
    <p class="h4 mb-4">Registrieren</p>


    @if (this.RegisterState == ERegisterState.Failed)
{
    <div class="alert alert-danger" role="alert">
         Fehler bei der Registrierung.
    </div>
}
else if (this.RegisterState == ERegisterState.Success)
{
    <div class="alert alert-success" role="alert">
         Registrierung erfolgreich
    </div>
}
else if (this.RegisterState == ERegisterState.PasswordsDontMatch)
{
    <div class="alert alert-danger" role="alert">
         Die eingegebenen Passwörter stimmen nicht überein!
    </div>
}


    <div class="form-row mb-4">
        <div class="col">
            <InputText @bind-Value="this.Request.Username" class="form-control" placeholder="Nutzername" />
        </div>
    </div>

    <div class="form-row mb-4">
        <div class="col">
            <InputText @bind-Value="this.Request.Forename" class="form-control" placeholder="Vorname" />
        </div>
        <div class="col">
            <InputText @bind-Value="this.Request.Lastname" class="form-control" placeholder="Nachname" />
        </div>
    </div>

    <div class="form-row mb-4">
        <div class="col">
            <InputDate @bind-Value="this.Request.Birthday" class="form-control" placeholder="Geburtstag" />
        </div>
    </div>

    <InputText @bind-Value="this.Request.Mail" type="email" class="form-control mb-4" placeholder="E-mail" />


    <InputText type="password" @bind-Value="this.Request.Password" class="form-control custom-pass-top"
        placeholder="Passwort" aria-describedby="defaultRegisterFormPasswordHelpBlock" />
    <InputText type="password" @bind-Value="this.RepeatPassword" class="form-control custom-pass-bottom"
        placeholder="Passwort bestätigen" aria-describedby="defaultRegisterFormPasswordHelpBlock" />
        @if (this.Request.Password != this.RepeatPassword && this.Request.Password != "")
        {
        <small class="text-danger">Die Passwörter stimmen nicht überein!</small>
        }
    @* TODO: Pass min requirements?
        <small id="defaultRegisterFormPasswordHelpBlock" class="form-text text-muted mb-4">
        At least 8 characters and 1 digit
        </small>
    *@


    <button class="btn btn-info my-4 btn-block" type="submit">
        <div class="d-flex align-items-center justify-content-center">
            Registrieren

            @if (this.RegisterState == ERegisterState.InProgress)
                {
                    <div class="ml-2 spinner-border" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                }
            </div>
        </button>

    </EditForm>

@code {
    public MUNity.Schema.Authentication.RegisterRequest Request { get; set; } = new MUNity.Schema.Authentication.RegisterRequest();

    public string RepeatPassword { get; set; }

    private enum ERegisterState
    {
        NotTried,
        InProgress,
        PasswordsDontMatch,
        Failed,
        Success
    }

    private ERegisterState RegisterState = ERegisterState.NotTried;

    private async Task Register()
    {
        this.RegisterState = ERegisterState.InProgress;
        if (this.Request.Password != RepeatPassword)
        {
            this.RegisterState = ERegisterState.PasswordsDontMatch;
            return;
        }

        var result = await this.userService.Register(Request);
        if (result.IsSuccessStatusCode)
        {
            this.RegisterState = ERegisterState.Success;
            return;
        }

        this.RegisterState = ERegisterState.Failed;
    }
}


<style>
    .custom-pass-top {
        border-bottom-left-radius: 0px;
        border-bottom-right-radius: 0px;
    }

    .custom-pass-bottom {
        border-top-left-radius: 0px;
        border-top-right-radius: 0px;
        border-top-width: 0px;
    }
</style>
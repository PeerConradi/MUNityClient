@using MUNityClient.Models.Resolution;

@if (CardVisible)
{
    <div class="border col-6 col-md-4 col-lg-12 py-3">

        @if (Amendment is ChangeAmendment)
        {
            <h5 class="card-title">Antrag auf Textänderung</h5>
        }
        <p class="text-center">
            <i class="fas fa-calendar fa-lg text-primary mx-2"
                alt="submit date"></i>@Amendment.SubmitTime.ToString("dd.MM.yyyy")
            <i class="fas fa-clock fa-lg text-primary ml-2 mr-1" alt="submit time"></i>
            @Amendment.SubmitTime.ToString("HH:mm")
        </p>
        <p class="text-center">
            @Amendment.SubmitterName
        </p>

        <p class="custom-control custom-checkbox">
            <input type="checkbox" class="custom-control-input" @bind="Amendment.Activated" id="customControlAutosizing">
            <label class="custom-control-label" for="customControlAutosizing">Auf Ansichten markieren</label>
        </p>

        <div class="row p-0 m-0 justify-content-between">
            <div class="btn-group btn-group-sm" role="group" aria-label="Basic example">
                <button class="btn btn-success btn-sm m-0 px-2" @onclick="ApplyAmendment"><i
                        class="fas fa-check mr-2"></i>Annehmen</button>
                <button class="btn btn-warning btn-sm  m-0 px-2" @onclick="DenyAmendment"><i
                        class="fas fa-ban mr-2"></i>Ablehnen</button>
            </div>
            <button class="btn btn-danger btn-sm  m-0 px-2"><i class="fas fa-trash mr-2"></i>Löschen</button>
        </div>
    </div>
}


@code {
    [Parameter]
    public Resolution Resolution { get; set; }

    [Parameter]
    public IAmendment Amendment { get; set; }

    [Parameter]
    public EventCallback Interaction { get; set; }

    private readonly HttpClient _httpClient;

    public bool CardVisible = true;

    public void ApplyAmendment()
    {
        this.Amendment?.Apply(this.Resolution);
        Interaction.InvokeAsync(this.Amendment);
    }

    public void DenyAmendment()
    {
        this.Amendment?.Deny(this.Resolution);
        Interaction.InvokeAsync(this.Amendment);
    }

    public string CardBorder
    {
        get
        {
            if (this.Amendment is ChangeAmendment) return "border-info";
            return "";
        }
    }
}
